We are talking about POSITION in this chapter

# understanding position property
# fixed navigation
# position element with z-index
# absolute and relative (stand alone and combined)
# Sticky positioning
# Stacking Context --> connecting to the z-index

 video # 71
  Description of static and float positioning. 
  imaginne you have a body element with 3 div's elements inside the body. by default each element follow the previous element
  and position right after each other inside the body tag and take entire space in the body tag. This behaviour is the
  default behaviour of block level element and follow the document flow. Question is does any property assign automatically thto the div elements
  so they can follow the default behaviour of the document flow? 
  The naswer is yes. By default position property applied with the default value of "Static" so the div elements can be position right after each other
  and take the entire provided space by the wrapper element, body in this case. 
  So we can overrite this default position property and break the default document flow.
  Basically we can place any element in any position of our page by assigning different value to the "Position" property.
  Position can be set to 
    1- static
    2- fixed
    3- relative
    4- absolute
    5- sticky


    1- static:
        static is set by default to the position. if you want to overwrite it you have to set "position" to other value in the CSS file.
        Static position are not affected by top/right/bottom/left. it is position in its own way according to document flow.

    2- Fixed Position

        so when we changed the position default element/static to the other value the element detached from its place in document flow and stick 
        to the top left corner of the wrapper element/inside the wrapper element. Then we have the option to place them where we want with the 
        top/bottom/left/right
        for example we can assing this attribute to the CSS file to place an element 200 from the top and 50 from the left.
        {
            position: fixed;
            top: 200;
            left: 50
        }

        with the "fixed" value to the "position" we will fixed the place of the element in the Viewport. What does it mean by viewpoert? viewport wha we will see 
        from the page. By scrolling up and down viewport will be different. 
        An element with fixed position, will stick to the view of the page, so if you scroll down or up the dixed element will always kepp its place and be visible.

        This fixed property is good to fixed the navigation bar on the top. so when users scroll down the navigation keeps its 
        position. also the fixed propert can be used for the background, so we fixed background into its place , we usuaaly
        make a div tag and assign a class to the div element, then in the CSS file we fixe the positon and assign url



        website background:
            Here is my thought of the website background:
                1- make a div in the body / alternatively you can skip this div
                2- assign class="background" to your background div
                3- in the CSS file create .background / if you skip the div tag in number 1, make .body in CSS file
                4- set 
                    - posiiton: fixed
                    - background-repeat: no-repeat
                    - background-size: cover
                    - background-position: center
                    - z-index: -1 ---> tihs put background behind other elements
                    - width: 100%
                    - height: 100%
                    - background-image: url() could be relative path from local address or a web-address with http(s) ...
                    alternatively you can use background-color: or just background: and then assign image or color
                5- mission-Accomplished

        z-index - every element has by default value of 0 in z-index.
                - can be + or - and +100 has the same impact of +1, -100 has the same impact of -1 or -5.
                - always comes with the position property, so the z-index setting without position does not have any impact and its useless.
                - usually use in the background of the website when user wants to put the background behind every other elements.
                - elements with the fixed position and z-index of +4 placed on top of elements with fixd positon and z-index of +1

    3- Relative Position
        This topic covered in video # 78
        in the previos section we talked about the static and fixed position. We mentioned that the static position is assigned to the element by default
        so if we want to move it and not follow the document flow, we have to change position value from "static" to "fixed" to first, detach an element from
        the document flow and then we can assign top/right/bottom/left to place an element where we want.

        Relative position unlike fixed position does not detach an element from document flow. If an element position assign to relative, it means it will place to its
        position as before, then we can assign top/right/bitton/left to move an element from current position to its new position. When an element move from its previous place
        to the new place according to values of /top/right/bottom/left, other elements would not take its place. and its previous place keep as a blank space.

        in fixed positio:     the assigned values to top/right/bottom/left move element from position(0, 0) from it's wrapper element position. 
        in relative position: the assigned values to top/right/bottom/left move element from position(0, 0) from it original position.


        Problem: The problem with realtive position is we can set top/right/bottom/left in a way that an element can be placed even outisde of the wrapper space. 
        Solution: one soluiton is to set "overFlow" of the wrapper element to the "hidden" value, so whenever children of the element will place outisde of the wrapper
        element space, they will be hidden from the view. 
            
            .child_element_css {
                position: relative;
                top: 800px;
                left: 600px //with these position, the child will be placed outside of the wrapper element.
            }

            .wrapper_element_css {
                overflow: hidden; //hide any child that will be goes outside of its taken space
            }

    4- Absolute Position:
        an element with absolute position, positioned to its nearest ancestor.  However; if an absolute positioned element has no positioned ancestors, 
        it uses the document body, and moves along with page scrolling.


    5- sticky positioning:
        sticky positioning is the combination of relative and fixed. an element with sticky positioning and also top/right/bottom/left attribute will be stick to the
        viewpoint at the time of scrolling but will move when it's wrapper element will go out side of the screen. So we can say sticky positioning is like fixed 
        positioning as long as it's wrapper element is visible in the viewport, when it;s wrapper element move outside of the viewport/screen, sticky element will behave
        like a fixed element.





    QUICK NOTES: 
        Positions static & relative keep their natural space in the flow of the document, while the absolute & fixed don’t — their space is removed and they have a 
        floating behavior.









