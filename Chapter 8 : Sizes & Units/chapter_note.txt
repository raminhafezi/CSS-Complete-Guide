video 101 - 107><<:
    we have different units to use in CSS

        1- pixel: px
        2- percentage: %
        3- root em: rem
        4- em: em
        5- viewport height: vh
        6- viewport width: vw

    if we think that each html has a content, then we have a padding, margin, borde,..
    so, we have font-size for the content, we have padding, boarder, as well as margin.
    then we have width and height of our html tag,
    last we have another 4 attribute that we cab assign the units to them, top, bottom, left, and right.
    so in total, we have 10 attributes for each hatmk tag to assign units to them. 
    Please rememberm display: border-box is we want to assign width and height.

    How is the size calculated?
        we have 4 categories in terms of size calculation.

        1- Absolute Lengths: mostly ignore user setting.
            - px
        2- Viewport Length: Adjust to current viewport
            - vh
            - vw
            - vmin
            - vmax
        3- Font-Relative Lengths: adjust to default size
            - rem
            - em
        4- %  --- Special case
            does this % related to body element, wrapper element, viewport, .... ? how about box height and box width in terms of 
            % ? how  they calculated?

    3 rules to remember when you want to assign percentage unit to your element.

        Rule I: 
            if the containing block has a fixed position (position:fixed) then child element see the containing bloxk as a view port.
            so assigning the percentage unit to your element, simply means percentage of the viewport.

        Rule II:
            if the element has a position: absolute then the container block is the closest ancestor with a positon absolute, relative, 
            fixed and sticky (anything without position: static) and it refers to the ancesor content plus padding.
            it means percentage unit to your element, calculated percentage size of the ancestor content+padding.

        Rule III:
            if your element that you want to assign percentage unit to it, has a static or relative position, then the size
            calculated based on the size of the ancesor content.
            
video 108:
    if you want to fix your image size, you can set the size: 50%, so yoiur image takes 50% of its container block element.
        the problem is, when user expand theeir browser width, the image also get bigger, because image wants to take 
        50% of its container,(probably the viewport). 
        A simple solution to this behaviour, is to set max-width, so the image would not get bigger on the large screen.
        and stopped to the defined pixcel on the max-width.

        so, with the combination of the max and min widthm with the width value we are in a safe side.


------------Font Size-------------

video 109:
    rem and em is the unit relative to the font size.
    if an element have specific font size defined for it in it's css, then the font size will be applied,
    othrewise,  css look at the element container, and based on the container setting, applied the font size to
    the element, it usually written in 2em, means twice the size of 1 em which is 16px.
    you can see it if you inspect elemetn, then click on the "compute" tab, and uncheck "show all" and expand font section.

    so basically, we can define all our font size based on the em,

    Problem with em:
        if we use em for the font size throughout our html page, the problem is two neighbour elements can get inheritance 
        of the font size, then multiple their font size by the parent and the em, and make a mess. Siomple using em for 
        every html element, can get the page design out of our control.
        A simple solutiono to this problem is using rem, rem means root em or font of our root/html and then multiple it 
        by what we design. so 
        
        1.2 rem means root(html) font size X 1.2
        1.2 em means container font size X 1.2

        so with the rem, we have full control of the font-size in our website.
        downside of the rem, is old browser does not support rem.

video 110:
    we can use rem for the margin as well. keep in mind, the rem refer to the font size of the html. for exmample if the user
    change the setting of the web-broswer font from medium to x large, then the rem also will be change, cause root now means html
    that has x large fize

video 112:
    if you want to set the size of an element to the entire page, we can use viewpoint height and viewpoint width
    example:
        .backdrop {
            position: fixed;
            z-index: 100;
            top: 0;
            left: 0;
            width: 100vw;
            height: 100vh;
            background-color= rgba(0,0,0,0.25;)
        }


video 113:
    the author recommend to use this property 
    
    - font-size for the root element -> %
    - font-size -> rem / or we can use em for the child only. becarefult it can get out of control easily

    - padding, margin -> rem
    - border -> px

    - width, height -> %, vh, vw or px
    - top, bottom -> %
    - left, right -> %

video 115:
    we can use auto for the margin, like what we have in the plan__list css class, when we want to align some html element(s)
    at the center of the page, we cans et margin to auto, so the browser aligns the elements into the middle of the scree,


video 116: 
    summary of these units, good tips.
    - if you want 100% of the height apply position fixed/absolute or using the viewport units (vw, vh)
    - if the element itself or the ancestors use position static/relative then 100% height is not working,
      simple solution is to add 100% height to all ancestors to fix this issue.
    
    - if you want to use min or max (width), you also have to mention width size such as 
        width: 55%;
        max-width: 580px;
        min-width: 250px;

        









